Index: default/eng_stringtable.txt
===================================================================
--- default/eng_stringtable.txt	(revision 4583)
+++ default/eng_stringtable.txt	(working copy)
@@ -888,6 +888,9 @@
 OPTIONS_DB_VERBOSE_LOGGING_DESC
 Toggles verbose logging of universe contents and effect evaluation.
 
+OPTIONS_DB_VERBOSE_SITREP_DESC
+Toggles inclusion of situation report messages with errors.
+
 OPTIONS_DB_TECH_DEMO
 Try out the 3D combat tech demo.
 
@@ -1636,6 +1639,9 @@
 OPTIONS_VERBOSE_LOGGING_DESC
 Verbose logging for debugging
 
+OPTIONS_VERBOSE_SITREP_DESC
+Verbose situation reports
+
 ##################
 # CombatSetupWnd #
 ##################
Index: UI/OptionsWnd.cpp
===================================================================
--- UI/OptionsWnd.cpp	(revision 4583)
+++ UI/OptionsWnd.cpp	(working copy)
@@ -762,6 +762,7 @@
     BeginSection(UserString("OPTIONS_DESCRIPTIONS"));
     BoolOption("UI.autogenerated-effects-descriptions", UserString("OPTIONS_AUTO_EFFECT_DESC"));
     BoolOption("verbose-logging",                       UserString("OPTIONS_VERBOSE_LOGGING_DESC"));
+    BoolOption("verbose-sitrep",                        UserString("OPTIONS_VERBOSE_SITREP_DESC"));
     EndSection();
     EndPage();
 
Index: UI/SitRepPanel.cpp
===================================================================
--- UI/SitRepPanel.cpp	(revision 4583)
+++ UI/SitRepPanel.cpp	(working copy)
@@ -6,6 +6,7 @@
 #include "../client/human/HumanClientApp.h"
 #include "../util/MultiplayerCommon.h"
 #include "../Empire/Empire.h"
+#include "../util/OptionsDB.h"
 
 #include <GG/DrawUtil.h>
 
@@ -13,6 +14,11 @@
 
 
 namespace {
+            /** Adds options related to SitRepPanel to Options DB. */
+    void AddOptions(OptionsDB& db) {
+        db.Add("verbose-sitrep", "OPTIONS_DB_VERBOSE_SITREP_DESC",  false,  Validator<bool>());
+    }
+    bool temp_bool = RegisterOptions(&AddOptions);
     void HandleLinkClick(const std::string& link_type, const std::string& data) {
         using boost::lexical_cast;
         try {
@@ -115,8 +121,10 @@
 
     // loop through sitreps and display
     for (Empire::SitRepItr sitrep_it = empire->SitRepBegin(); sitrep_it != empire->SitRepEnd(); ++sitrep_it) {
-        if (!(*sitrep_it)->Validate())
-            continue;
+        if (!GetOptionsDB().Get<bool>("verbose-sitrep")) {
+            if (!(*sitrep_it)->Validate())
+                continue;
+        }
         LinkText* link_text = new LinkText(GG::X0, GG::Y0, width, (*sitrep_it)->GetText() + " ", font, format, ClientUI::TextColor());
         GG::Connect(link_text->LinkClickedSignal,       &HandleLinkClick);
         GG::Connect(link_text->LinkDoubleClickedSignal, &HandleLinkClick);
