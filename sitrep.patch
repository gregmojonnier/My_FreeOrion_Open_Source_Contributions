Index: default/eng_stringtable.txt
===================================================================
--- default/eng_stringtable.txt	(revision 4580)
+++ default/eng_stringtable.txt	(working copy)
@@ -2423,7 +2423,7 @@
 An unknown event occurred.
 
 SITREP_SHIP_BUILT
-The ship %ship% has been produced at %system%.
+A %shipdesign% has been produced at %system%. It is named %ship%.
 
 SITREP_BUILDING_BUILT
 %building% has been produced on %planet%.
Index: Empire/Empire.cpp
===================================================================
--- Empire/Empire.cpp	(revision 4580)
+++ Empire/Empire.cpp	(working copy)
@@ -2523,7 +2523,7 @@
                 Logger().debugStream() << "New Ship created on turn: " << ship->CreationTurn();
 
                 // add sitrep
-                SitRepEntry* entry = CreateShipBuiltSitRep(ship_id, system->ID());
+                SitRepEntry* entry = CreateShipBuiltSitRep(ship_id, system->ID(), ship->Design()->ID());
                 AddSitRepEntry(entry);
                 break;
             }
Index: util/SitRepEntry.cpp
===================================================================
--- util/SitRepEntry.cpp	(revision 4580)
+++ util/SitRepEntry.cpp	(working copy)
@@ -26,10 +26,11 @@
     return sitrep;
 }
 
-SitRepEntry* CreateShipBuiltSitRep(int ship_id, int system_id) {
+SitRepEntry* CreateShipBuiltSitRep(int ship_id, int system_id, int shipdesign_id) {
     SitRepEntry* sitrep = new SitRepEntry("SITREP_SHIP_BUILT");
     sitrep->AddVariable(VarText::SYSTEM_ID_TAG,     boost::lexical_cast<std::string>(system_id));
     sitrep->AddVariable(VarText::SHIP_ID_TAG,       boost::lexical_cast<std::string>(ship_id));
+    sitrep->AddVariable(VarText::DESIGN_ID_TAG,     boost::lexical_cast<std::string>(shipdesign_id));
     return sitrep;
 }
 
Index: util/SitRepEntry.h
===================================================================
--- util/SitRepEntry.h	(revision 4580)
+++ util/SitRepEntry.h	(working copy)
@@ -27,7 +27,7 @@
 
 /** Sitrep constructors for each SitRep type */
 SitRepEntry* CreateTechResearchedSitRep(const std::string& tech_name);
-SitRepEntry* CreateShipBuiltSitRep(int ship_id, int system_id);
+SitRepEntry* CreateShipBuiltSitRep(int ship_id, int system_id, int shipdesign_id);
 SitRepEntry* CreateBuildingBuiltSitRep(int building_id, int planet_id);
 SitRepEntry* CreateCombatSitRep(int system_id);
 SitRepEntry* CreateGroundCombatSitRep(int planet_id);
